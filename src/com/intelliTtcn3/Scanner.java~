/* The following code was generated by JFlex 1.4.3 on 15-6-22 ÏÂÎç11:22 */

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Copyright (C) 1998-2015  Gerwin Klein <lsf@jflex.de>                    *
 * All rights reserved.                                                    *
 *                                                                         *
 * License: BSD                                                            *
 *                                                                         *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/* Java 1.2 language lexer specification */

/* Use together with unicode.flex for Unicode preprocesssing */
/* and java12.cup for a Java 1.2 parser                      */

/* Note that this lexer specification is not tuned for speed.
   It is in fact quite slow on integer and floating point literals,
   because the input is read twice and the methods used to parse
   the numbers are not very fast.
   For a production quality application (e.g. a Java compiler)
   this could be optimized */

package com.intelliTtcn3;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
//import com.intellij.psi.TokenType;
import com.intelliTtcn3.psi.TtcnTypes;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 15-6-22 ÏÂÎç11:22 from the specification file
 * <tt>C:/code/ttcnGit/IntelliTtcn3/src/ttcn3.flex</tt>
 */
public class Scanner implements FlexLexer {
  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int STRING = 2;
  public static final int YYINITIAL = 0;
  public static final int CHARLITERAL = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2, 2
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\7\1\3\1\2\1\0\1\3\1\1\16\7\4\0\1\55\1\77"+
    "\1\16\1\0\1\6\1\0\1\72\1\17\1\74\1\75\1\5\1\76"+
    "\1\71\1\10\1\14\1\4\1\11\1\21\1\103\1\106\1\60\1\12"+
    "\1\107\1\104\1\105\1\12\1\65\1\73\1\102\1\66\1\101\1\100"+
    "\1\62\1\23\1\22\2\23\1\15\1\13\1\6\1\24\6\6\1\25"+
    "\13\6\1\63\1\20\1\64\1\0\1\61\1\0\1\42\1\50\1\36"+
    "\1\46\1\35\1\34\1\51\1\52\1\26\1\56\1\54\1\43\1\27"+
    "\1\47\1\31\1\30\1\6\1\32\1\40\1\33\1\37\1\41\1\53"+
    "\1\44\1\45\1\57\1\67\1\0\1\70\1\0\41\7\2\0\4\6"+
    "\4\0\1\6\2\0\1\7\7\0\1\6\4\0\1\6\5\0\27\6"+
    "\1\0\37\6\1\0\u01ca\6\4\0\14\6\16\0\5\6\7\0\1\6"+
    "\1\0\1\6\21\0\160\7\5\6\1\0\2\6\2\0\4\6\10\0"+
    "\1\6\1\0\3\6\1\0\1\6\1\0\24\6\1\0\123\6\1\0"+
    "\213\6\1\0\5\7\2\0\236\6\11\0\46\6\2\0\1\6\7\0"+
    "\47\6\7\0\1\6\1\0\55\7\1\0\1\7\1\0\2\7\1\0"+
    "\2\7\1\0\1\7\10\0\33\6\5\0\3\6\15\0\5\7\6\0"+
    "\1\6\4\0\13\7\5\0\53\6\37\7\4\0\2\6\1\7\143\6"+
    "\1\0\1\6\10\7\1\0\6\7\2\6\2\7\1\0\4\7\2\6"+
    "\12\7\3\6\2\0\1\6\17\0\1\7\1\6\1\7\36\6\33\7"+
    "\2\0\131\6\13\7\1\6\16\0\12\7\41\6\11\7\2\6\4\0"+
    "\1\6\5\0\26\6\4\7\1\6\11\7\1\6\3\7\1\6\5\7"+
    "\22\0\31\6\3\7\104\0\1\6\1\0\13\6\67\0\33\7\1\0"+
    "\4\7\66\6\3\7\1\6\22\7\1\6\7\7\12\6\2\7\2\0"+
    "\12\7\1\0\7\6\1\0\7\6\1\0\3\7\1\0\10\6\2\0"+
    "\2\6\2\0\26\6\1\0\7\6\1\0\1\6\3\0\4\6\2\0"+
    "\1\7\1\6\7\7\2\0\2\7\2\0\3\7\1\6\10\0\1\7"+
    "\4\0\2\6\1\0\3\6\2\7\2\0\12\7\4\6\7\0\1\6"+
    "\5\0\3\7\1\0\6\6\4\0\2\6\2\0\26\6\1\0\7\6"+
    "\1\0\2\6\1\0\2\6\1\0\2\6\2\0\1\7\1\0\5\7"+
    "\4\0\2\7\2\0\3\7\3\0\1\7\7\0\4\6\1\0\1\6"+
    "\7\0\14\7\3\6\1\7\13\0\3\7\1\0\11\6\1\0\3\6"+
    "\1\0\26\6\1\0\7\6\1\0\2\6\1\0\5\6\2\0\1\7"+
    "\1\6\10\7\1\0\3\7\1\0\3\7\2\0\1\6\17\0\2\6"+
    "\2\7\2\0\12\7\1\0\1\6\17\0\3\7\1\0\10\6\2\0"+
    "\2\6\2\0\26\6\1\0\7\6\1\0\2\6\1\0\5\6\2\0"+
    "\1\7\1\6\7\7\2\0\2\7\2\0\3\7\10\0\2\7\4\0"+
    "\2\6\1\0\3\6\2\7\2\0\12\7\1\0\1\6\20\0\1\7"+
    "\1\6\1\0\6\6\3\0\3\6\1\0\4\6\3\0\2\6\1\0"+
    "\1\6\1\0\2\6\3\0\2\6\3\0\3\6\3\0\14\6\4\0"+
    "\5\7\3\0\3\7\1\0\4\7\2\0\1\6\6\0\1\7\16\0"+
    "\12\7\11\0\1\6\7\0\3\7\1\0\10\6\1\0\3\6\1\0"+
    "\27\6\1\0\12\6\1\0\5\6\3\0\1\6\7\7\1\0\3\7"+
    "\1\0\4\7\7\0\2\7\1\0\2\6\6\0\2\6\2\7\2\0"+
    "\12\7\22\0\2\7\1\0\10\6\1\0\3\6\1\0\27\6\1\0"+
    "\12\6\1\0\5\6\2\0\1\7\1\6\7\7\1\0\3\7\1\0"+
    "\4\7\7\0\2\7\7\0\1\6\1\0\2\6\2\7\2\0\12\7"+
    "\1\0\2\6\17\0\2\7\1\0\10\6\1\0\3\6\1\0\51\6"+
    "\2\0\1\6\7\7\1\0\3\7\1\0\4\7\1\6\10\0\1\7"+
    "\10\0\2\6\2\7\2\0\12\7\12\0\6\6\2\0\2\7\1\0"+
    "\22\6\3\0\30\6\1\0\11\6\1\0\1\6\2\0\7\6\3\0"+
    "\1\7\4\0\6\7\1\0\1\7\1\0\10\7\22\0\2\7\15\0"+
    "\60\6\1\7\2\6\7\7\4\0\10\6\10\7\1\0\12\7\47\0"+
    "\2\6\1\0\1\6\2\0\2\6\1\0\1\6\2\0\1\6\6\0"+
    "\4\6\1\0\7\6\1\0\3\6\1\0\1\6\1\0\1\6\2\0"+
    "\2\6\1\0\4\6\1\7\2\6\6\7\1\0\2\7\1\6\2\0"+
    "\5\6\1\0\1\6\1\0\6\7\2\0\12\7\2\0\4\6\40\0"+
    "\1\6\27\0\2\7\6\0\12\7\13\0\1\7\1\0\1\7\1\0"+
    "\1\7\4\0\2\7\10\6\1\0\44\6\4\0\24\7\1\0\2\7"+
    "\5\6\13\7\1\0\44\7\11\0\1\7\71\0\53\6\24\7\1\6"+
    "\12\7\6\0\6\6\4\7\4\6\3\7\1\6\3\7\2\6\7\7"+
    "\3\6\4\7\15\6\14\7\1\6\17\7\2\0\46\6\1\0\1\6"+
    "\5\0\1\6\2\0\53\6\1\0\u014d\6\1\0\4\6\2\0\7\6"+
    "\1\0\1\6\1\0\4\6\2\0\51\6\1\0\4\6\2\0\41\6"+
    "\1\0\4\6\2\0\7\6\1\0\1\6\1\0\4\6\2\0\17\6"+
    "\1\0\71\6\1\0\4\6\2\0\103\6\2\0\3\7\40\0\20\6"+
    "\20\0\125\6\14\0\u026c\6\2\0\21\6\1\0\32\6\5\0\113\6"+
    "\3\0\3\6\17\0\15\6\1\0\4\6\3\7\13\0\22\6\3\7"+
    "\13\0\22\6\2\7\14\0\15\6\1\0\3\6\1\0\2\7\14\0"+
    "\64\6\40\7\3\0\1\6\3\0\2\6\1\7\2\0\12\7\41\0"+
    "\3\7\2\0\12\7\6\0\130\6\10\0\51\6\1\7\1\6\5\0"+
    "\106\6\12\0\35\6\3\0\14\7\4\0\14\7\12\0\12\7\36\6"+
    "\2\0\5\6\13\0\54\6\4\0\21\7\7\6\2\7\6\0\12\7"+
    "\46\0\27\6\5\7\4\0\65\6\12\7\1\0\35\7\2\0\13\7"+
    "\6\0\12\7\15\0\1\6\130\0\5\7\57\6\21\7\7\6\4\0"+
    "\12\7\21\0\11\7\14\0\3\7\36\6\15\7\2\6\12\7\54\6"+
    "\16\7\14\0\44\6\24\7\10\0\12\7\3\0\3\6\12\7\44\6"+
    "\122\0\3\7\1\0\25\7\4\6\1\7\4\6\3\7\2\6\11\0"+
    "\300\6\47\7\25\0\4\7\u0116\6\2\0\6\6\2\0\46\6\2\0"+
    "\6\6\2\0\10\6\1\0\1\6\1\0\1\6\1\0\1\6\1\0"+
    "\37\6\2\0\65\6\1\0\7\6\1\0\1\6\3\0\3\6\1\0"+
    "\7\6\3\0\4\6\2\0\6\6\4\0\15\6\5\0\3\6\1\0"+
    "\7\6\16\0\5\7\32\0\5\7\20\0\2\6\23\0\1\6\13\0"+
    "\5\7\5\0\6\7\1\0\1\6\15\0\1\6\20\0\15\6\3\0"+
    "\33\6\25\0\15\7\4\0\1\7\3\0\14\7\21\0\1\6\4\0"+
    "\1\6\2\0\12\6\1\0\1\6\3\0\5\6\6\0\1\6\1\0"+
    "\1\6\1\0\1\6\1\0\4\6\1\0\13\6\2\0\4\6\5\0"+
    "\5\6\4\0\1\6\21\0\51\6\u0a77\0\57\6\1\0\57\6\1\0"+
    "\205\6\6\0\4\6\3\7\2\6\14\0\46\6\1\0\1\6\5\0"+
    "\1\6\2\0\70\6\7\0\1\6\17\0\1\7\27\6\11\0\7\6"+
    "\1\0\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0\7\6"+
    "\1\0\7\6\1\0\7\6\1\0\40\7\57\0\1\6\u01d5\0\3\6"+
    "\31\0\11\6\6\7\1\0\5\6\2\0\5\6\4\0\126\6\2\0"+
    "\2\7\2\0\3\6\1\0\132\6\1\0\4\6\5\0\51\6\3\0"+
    "\136\6\21\0\33\6\65\0\20\6\u0200\0\u19b6\6\112\0\u51cd\6\63\0"+
    "\u048d\6\103\0\56\6\2\0\u010d\6\3\0\20\6\12\7\2\6\24\0"+
    "\57\6\1\7\4\0\12\7\1\0\31\6\7\0\1\7\120\6\2\7"+
    "\45\0\11\6\2\0\147\6\2\0\4\6\1\0\4\6\14\0\13\6"+
    "\115\0\12\6\1\7\3\6\1\7\4\6\1\7\27\6\5\7\20\0"+
    "\1\6\7\0\64\6\14\0\2\7\62\6\21\7\13\0\12\7\6\0"+
    "\22\7\6\6\3\0\1\6\4\0\12\7\34\6\10\7\2\0\27\6"+
    "\15\7\14\0\35\6\3\0\4\7\57\6\16\7\16\0\1\6\12\7"+
    "\46\0\51\6\16\7\11\0\3\6\1\7\10\6\2\7\2\0\12\7"+
    "\6\0\27\6\3\0\1\6\1\7\4\0\60\6\1\7\1\6\3\7"+
    "\2\6\2\7\5\6\2\7\1\6\1\7\1\6\30\0\3\6\2\0"+
    "\13\6\5\7\2\0\3\6\2\7\12\0\6\6\2\0\6\6\2\0"+
    "\6\6\11\0\7\6\1\0\7\6\221\0\43\6\10\7\1\0\2\7"+
    "\2\0\12\7\6\0\u2ba4\6\14\0\27\6\4\0\61\6\u2104\0\u016e\6"+
    "\2\0\152\6\46\0\7\6\14\0\5\6\5\0\1\6\1\7\12\6"+
    "\1\0\15\6\1\0\5\6\1\0\1\6\1\0\2\6\1\0\2\6"+
    "\1\0\154\6\41\0\u016b\6\22\0\100\6\2\0\66\6\50\0\15\6"+
    "\3\0\20\7\20\0\7\7\14\0\2\6\30\0\3\6\31\0\1\6"+
    "\6\0\5\6\1\0\207\6\2\0\1\7\4\0\1\6\13\0\12\7"+
    "\7\0\32\6\4\0\1\6\1\0\32\6\13\0\131\6\3\0\6\6"+
    "\2\0\6\6\2\0\6\6\2\0\3\6\3\0\2\6\3\0\2\6"+
    "\22\0\3\7\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\3\0\2\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\1\0\26\4\1\11\1\0\1\12\1\13\1\14"+
    "\1\0\1\15\1\16\1\17\1\20\1\21\1\22\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\31\2\32\1\33"+
    "\1\0\2\34\1\0\1\35\1\0\2\6\1\36\1\6"+
    "\3\0\1\37\3\0\1\4\1\40\1\41\14\4\1\42"+
    "\1\43\3\4\1\44\5\4\1\45\42\4\1\46\16\4"+
    "\4\0\1\47\1\50\1\51\1\52\1\53\1\54\1\55"+
    "\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65"+
    "\1\66\1\67\1\70\2\35\1\0\2\6\1\0\1\6"+
    "\3\0\1\71\1\72\7\4\1\73\1\74\1\4\1\75"+
    "\16\4\1\76\2\4\1\77\14\4\1\100\34\4\1\101"+
    "\6\4\1\102\3\4\1\103\1\104\1\4\1\105\1\106"+
    "\1\107\3\4\1\110\4\4\1\111\17\4\4\0\1\6"+
    "\2\0\13\4\1\112\7\4\1\113\1\114\1\4\1\115"+
    "\11\4\1\116\1\117\4\4\1\120\2\4\1\121\1\4"+
    "\1\122\1\4\1\123\3\4\1\124\13\4\1\125\1\126"+
    "\2\4\1\127\5\4\1\130\2\4\1\131\1\4\1\132"+
    "\22\4\1\133\4\4\1\134\2\4\1\135\3\4\1\136"+
    "\5\4\1\137\1\140\1\4\1\141\4\0\1\6\1\142"+
    "\2\4\1\143\4\4\1\144\3\4\1\145\5\4\1\146"+
    "\4\4\1\147\1\4\1\150\5\4\1\151\1\4\1\152"+
    "\5\4\1\153\1\154\1\155\12\4\1\156\2\4\1\157"+
    "\1\160\1\161\1\4\1\162\1\4\1\163\2\4\1\164"+
    "\10\4\1\165\2\4\1\166\3\4\1\167\2\4\1\170"+
    "\1\171\4\4\1\172\5\4\1\173\1\174\4\4\1\175"+
    "\1\4\2\0\1\176\1\0\1\6\1\177\4\4\1\200"+
    "\1\4\1\201\5\4\1\202\4\4\1\203\1\204\1\205"+
    "\7\4\1\206\5\4\1\207\1\210\6\4\1\211\4\4"+
    "\1\212\1\4\1\213\1\214\1\4\1\215\1\216\3\4"+
    "\1\217\4\4\1\220\7\4\1\221\6\4\1\222\1\223"+
    "\1\224\1\0\1\6\2\4\1\225\3\4\1\226\1\227"+
    "\1\4\1\230\1\4\1\231\3\4\1\232\1\4\1\233"+
    "\1\234\1\235\5\4\1\236\1\237\5\4\1\240\1\241"+
    "\7\4\1\242\1\243\1\4\1\244\1\245\1\246\1\4"+
    "\1\247\1\4\1\250\2\4\1\251\1\4\1\252\1\4"+
    "\1\253\2\4\1\0\1\6\2\4\1\254\1\255\3\4"+
    "\1\256\1\4\1\257\1\4\1\260\1\261\1\262\1\263"+
    "\5\4\1\264\5\4\1\265\1\4\1\266\1\267\4\4"+
    "\1\270\2\4\1\0\1\6\1\271\1\4\1\272\1\273"+
    "\2\4\1\274\1\275\1\276\1\4\1\277\3\4\1\300"+
    "\1\301\5\4\1\302\1\4\1\303\1\0\1\6\1\304"+
    "\2\4\1\305\1\306\1\307\1\310\1\0\1\311\1\4"+
    "\1\312\1\313\1\4\1\314\1\0\1\315\1\316\1\317"+
    "\1\0\1\320\1\4\2\0\1\321\3\0\1\322\1\323";

  private static int [] zzUnpackAction() {
    int [] result = new int[770];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\110\0\220\0\330\0\u0120\0\u0168\0\u0120\0\u01b0"+
    "\0\u01f8\0\u0240\0\u0288\0\u0120\0\u02d0\0\u0318\0\u0360\0\u03a8"+
    "\0\u03f0\0\u0438\0\u0480\0\u04c8\0\u0510\0\u0558\0\u05a0\0\u05e8"+
    "\0\u0630\0\u0678\0\u06c0\0\u0708\0\u0750\0\u0798\0\u07e0\0\u0828"+
    "\0\u0870\0\u08b8\0\u0900\0\u01b0\0\u0948\0\u0120\0\u0120\0\u0990"+
    "\0\u09d8\0\u0120\0\u0120\0\u0120\0\u0120\0\u0120\0\u0120\0\u0120"+
    "\0\u0a20\0\u0a68\0\u0120\0\u0ab0\0\u0af8\0\u0b40\0\u0b88\0\u0120"+
    "\0\u0120\0\u0bd0\0\u0c18\0\u0120\0\u0c60\0\u0ca8\0\u0cf0\0\u0120"+
    "\0\u0d38\0\u0120\0\u0d80\0\u0dc8\0\u0e10\0\u0e58\0\u0120\0\u0ea0"+
    "\0\u0ee8\0\u0f30\0\u0f78\0\u0fc0\0\u1008\0\u1050\0\u1098\0\u10e0"+
    "\0\u1128\0\u1170\0\u11b8\0\u1200\0\u1248\0\u1290\0\u12d8\0\u1320"+
    "\0\u1368\0\u13b0\0\u01b0\0\u13f8\0\u1440\0\u1488\0\u01b0\0\u14d0"+
    "\0\u1518\0\u1560\0\u15a8\0\u15f0\0\u01b0\0\u1638\0\u1680\0\u16c8"+
    "\0\u1710\0\u1758\0\u17a0\0\u17e8\0\u1830\0\u1878\0\u18c0\0\u1908"+
    "\0\u1950\0\u1998\0\u19e0\0\u1a28\0\u1a70\0\u1ab8\0\u1b00\0\u1b48"+
    "\0\u1b90\0\u1bd8\0\u1c20\0\u1c68\0\u1cb0\0\u1cf8\0\u1d40\0\u1d88"+
    "\0\u1dd0\0\u1e18\0\u1e60\0\u1ea8\0\u1ef0\0\u1f38\0\u1f80\0\u1fc8"+
    "\0\u2010\0\u2058\0\u20a0\0\u20e8\0\u2130\0\u2178\0\u21c0\0\u2208"+
    "\0\u2250\0\u2298\0\u22e0\0\u2328\0\u2370\0\u23b8\0\u2400\0\u2448"+
    "\0\u2490\0\u24d8\0\u0120\0\u0120\0\u0120\0\u0120\0\u0120\0\u0120"+
    "\0\u0120\0\u0120\0\u0120\0\u0120\0\u0120\0\u0120\0\u0120\0\u0120"+
    "\0\u0120\0\u0120\0\u0120\0\u0120\0\u2520\0\u0120\0\u2568\0\u25b0"+
    "\0\u25f8\0\u2640\0\u2688\0\u26d0\0\u2718\0\u2760\0\u0120\0\u0120"+
    "\0\u27a8\0\u27f0\0\u2838\0\u2880\0\u28c8\0\u2910\0\u2958\0\u29a0"+
    "\0\u01b0\0\u29e8\0\u01b0\0\u2a30\0\u2a78\0\u2ac0\0\u2b08\0\u2b50"+
    "\0\u2b98\0\u2be0\0\u2c28\0\u2c70\0\u2cb8\0\u2d00\0\u2d48\0\u2d90"+
    "\0\u2dd8\0\u01b0\0\u2e20\0\u2e68\0\u01b0\0\u2eb0\0\u2ef8\0\u2f40"+
    "\0\u2f88\0\u2fd0\0\u3018\0\u3060\0\u30a8\0\u30f0\0\u3138\0\u3180"+
    "\0\u31c8\0\u01b0\0\u3210\0\u3258\0\u32a0\0\u32e8\0\u3330\0\u3378"+
    "\0\u33c0\0\u3408\0\u3450\0\u3498\0\u34e0\0\u3528\0\u3570\0\u35b8"+
    "\0\u3600\0\u3648\0\u3690\0\u36d8\0\u3720\0\u3768\0\u37b0\0\u37f8"+
    "\0\u3840\0\u3888\0\u38d0\0\u3918\0\u3960\0\u39a8\0\u39f0\0\u3a38"+
    "\0\u3a80\0\u3ac8\0\u3b10\0\u3b58\0\u3ba0\0\u3be8\0\u3c30\0\u3c78"+
    "\0\u3cc0\0\u3d08\0\u01b0\0\u3d50\0\u3d98\0\u3de0\0\u01b0\0\u3e28"+
    "\0\u3e70\0\u3eb8\0\u3f00\0\u3f48\0\u3f90\0\u3fd8\0\u4020\0\u4068"+
    "\0\u40b0\0\u40f8\0\u4140\0\u4188\0\u41d0\0\u4218\0\u4260\0\u42a8"+
    "\0\u42f0\0\u4338\0\u4380\0\u43c8\0\u4410\0\u4458\0\u44a0\0\u44e8"+
    "\0\u4530\0\u4578\0\u45c0\0\u4608\0\u4650\0\u4698\0\u46e0\0\u4728"+
    "\0\u4770\0\u47b8\0\u4800\0\u4848\0\u4890\0\u48d8\0\u4920\0\u4968"+
    "\0\u49b0\0\u01b0\0\u49f8\0\u4a40\0\u4a88\0\u4ad0\0\u4b18\0\u4b60"+
    "\0\u4ba8\0\u01b0\0\u01b0\0\u4bf0\0\u01b0\0\u4c38\0\u4c80\0\u4cc8"+
    "\0\u4d10\0\u4d58\0\u4da0\0\u4de8\0\u4e30\0\u4e78\0\u01b0\0\u01b0"+
    "\0\u4ec0\0\u4f08\0\u4f50\0\u4f98\0\u01b0\0\u4fe0\0\u5028\0\u01b0"+
    "\0\u5070\0\u01b0\0\u50b8\0\u01b0\0\u5100\0\u5148\0\u5190\0\u01b0"+
    "\0\u51d8\0\u5220\0\u5268\0\u52b0\0\u52f8\0\u5340\0\u5388\0\u53d0"+
    "\0\u5418\0\u5460\0\u54a8\0\u01b0\0\u01b0\0\u54f0\0\u5538\0\u5580"+
    "\0\u55c8\0\u5610\0\u5658\0\u56a0\0\u56e8\0\u01b0\0\u5730\0\u5778"+
    "\0\u01b0\0\u57c0\0\u5808\0\u5850\0\u5898\0\u58e0\0\u5928\0\u5970"+
    "\0\u59b8\0\u5a00\0\u5a48\0\u5a90\0\u5ad8\0\u5b20\0\u5b68\0\u5bb0"+
    "\0\u5bf8\0\u5c40\0\u5c88\0\u5cd0\0\u5d18\0\u01b0\0\u5d60\0\u5da8"+
    "\0\u5df0\0\u5e38\0\u01b0\0\u5e80\0\u5ec8\0\u01b0\0\u5f10\0\u5f58"+
    "\0\u5fa0\0\u01b0\0\u5fe8\0\u6030\0\u6078\0\u60c0\0\u6108\0\u01b0"+
    "\0\u01b0\0\u6150\0\u6198\0\u61e0\0\u6228\0\u6270\0\u62b8\0\u6300"+
    "\0\u0120\0\u6348\0\u6390\0\u01b0\0\u63d8\0\u6420\0\u6468\0\u64b0"+
    "\0\u01b0\0\u64f8\0\u6540\0\u6588\0\u01b0\0\u65d0\0\u6618\0\u6660"+
    "\0\u66a8\0\u66f0\0\u01b0\0\u6738\0\u6780\0\u67c8\0\u6810\0\u01b0"+
    "\0\u6858\0\u01b0\0\u68a0\0\u68e8\0\u6930\0\u6978\0\u69c0\0\u01b0"+
    "\0\u6a08\0\u01b0\0\u6a50\0\u6a98\0\u6ae0\0\u6b28\0\u6b70\0\u01b0"+
    "\0\u01b0\0\u01b0\0\u6bb8\0\u6c00\0\u6c48\0\u6c90\0\u6cd8\0\u6d20"+
    "\0\u6d68\0\u6db0\0\u6df8\0\u6e40\0\u01b0\0\u6e88\0\u6ed0\0\u01b0"+
    "\0\u01b0\0\u6f18\0\u6f60\0\u01b0\0\u6fa8\0\u01b0\0\u6ff0\0\u7038"+
    "\0\u01b0\0\u7080\0\u70c8\0\u7110\0\u7158\0\u71a0\0\u71e8\0\u7230"+
    "\0\u7278\0\u72c0\0\u7308\0\u7350\0\u01b0\0\u7398\0\u73e0\0\u7428"+
    "\0\u01b0\0\u7470\0\u74b8\0\u01b0\0\u01b0\0\u7500\0\u7548\0\u7590"+
    "\0\u75d8\0\u01b0\0\u7620\0\u7668\0\u76b0\0\u76f8\0\u7740\0\u01b0"+
    "\0\u01b0\0\u7788\0\u77d0\0\u7818\0\u7860\0\u01b0\0\u78a8\0\u78f0"+
    "\0\u7938\0\u0120\0\u7980\0\u79c8\0\u01b0\0\u7a10\0\u7a58\0\u7aa0"+
    "\0\u7ae8\0\u01b0\0\u7b30\0\u7b78\0\u7bc0\0\u7c08\0\u7c50\0\u7c98"+
    "\0\u7ce0\0\u01b0\0\u7d28\0\u7d70\0\u7db8\0\u7e00\0\u01b0\0\u01b0"+
    "\0\u01b0\0\u7e48\0\u7e90\0\u7ed8\0\u7f20\0\u7f68\0\u7fb0\0\u7ff8"+
    "\0\u01b0\0\u8040\0\u8088\0\u80d0\0\u8118\0\u8160\0\u81a8\0\u01b0"+
    "\0\u81f0\0\u8238\0\u8280\0\u82c8\0\u8310\0\u8358\0\u01b0\0\u83a0"+
    "\0\u83e8\0\u8430\0\u8478\0\u01b0\0\u84c0\0\u01b0\0\u01b0\0\u8508"+
    "\0\u01b0\0\u01b0\0\u8550\0\u8598\0\u85e0\0\u01b0\0\u8628\0\u8670"+
    "\0\u86b8\0\u8700\0\u01b0\0\u8748\0\u8790\0\u87d8\0\u8820\0\u8868"+
    "\0\u88b0\0\u88f8\0\u01b0\0\u8940\0\u8988\0\u89d0\0\u8a18\0\u8a60"+
    "\0\u8aa8\0\u01b0\0\u0120\0\u0120\0\u8af0\0\u8b38\0\u8b80\0\u8bc8"+
    "\0\u01b0\0\u8c10\0\u8c58\0\u8ca0\0\u01b0\0\u01b0\0\u8ce8\0\u01b0"+
    "\0\u8d30\0\u01b0\0\u8d78\0\u8dc0\0\u8e08\0\u01b0\0\u8e50\0\u01b0"+
    "\0\u01b0\0\u01b0\0\u8e98\0\u8ee0\0\u8f28\0\u8f70\0\u8fb8\0\u01b0"+
    "\0\u01b0\0\u9000\0\u9048\0\u9090\0\u90d8\0\u9120\0\u01b0\0\u01b0"+
    "\0\u9168\0\u91b0\0\u91f8\0\u9240\0\u9288\0\u92d0\0\u9318\0\u01b0"+
    "\0\u01b0\0\u9360\0\u01b0\0\u01b0\0\u01b0\0\u93a8\0\u01b0\0\u93f0"+
    "\0\u01b0\0\u9438\0\u9480\0\u01b0\0\u94c8\0\u01b0\0\u9510\0\u01b0"+
    "\0\u9558\0\u95a0\0\u95e8\0\u9630\0\u9678\0\u96c0\0\u01b0\0\u01b0"+
    "\0\u9708\0\u9750\0\u9798\0\u01b0\0\u97e0\0\u01b0\0\u9828\0\u01b0"+
    "\0\u01b0\0\u01b0\0\u01b0\0\u9870\0\u98b8\0\u9900\0\u9948\0\u9990"+
    "\0\u01b0\0\u99d8\0\u9a20\0\u9a68\0\u9ab0\0\u9af8\0\u01b0\0\u9b40"+
    "\0\u01b0\0\u01b0\0\u9b88\0\u9bd0\0\u9c18\0\u9c60\0\u01b0\0\u9ca8"+
    "\0\u9cf0\0\u9d38\0\u9d80\0\u01b0\0\u9dc8\0\u01b0\0\u01b0\0\u9e10"+
    "\0\u9e58\0\u01b0\0\u01b0\0\u01b0\0\u9ea0\0\u01b0\0\u9ee8\0\u9f30"+
    "\0\u9f78\0\u9fc0\0\u01b0\0\ua008\0\ua050\0\ua098\0\ua0e0\0\ua128"+
    "\0\u01b0\0\ua170\0\u01b0\0\ua1b8\0\ua200\0\u01b0\0\ua248\0\ua290"+
    "\0\u01b0\0\u01b0\0\u01b0\0\u01b0\0\ua2d8\0\u01b0\0\ua320\0\u01b0"+
    "\0\u01b0\0\ua368\0\u01b0\0\ua3b0\0\u0d38\0\u01b0\0\u01b0\0\ua3f8"+
    "\0\u01b0\0\ua440\0\ua488\0\ua4d0\0\u01b0\0\ua518\0\ua560\0\ua5a8"+
    "\0\u0120\0\u0120";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[770];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\0\1\4\2\5\1\6\1\7\1\10\1\0\1\11"+
    "\2\12\1\10\1\13\1\10\1\14\1\15\1\0\1\12"+
    "\4\10\1\16\1\17\1\20\1\21\1\22\1\23\1\24"+
    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\10\1\35\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\5\2\10\1\12\1\44\1\45\1\46\1\47\1\50"+
    "\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60"+
    "\1\61\1\62\1\63\1\64\1\65\5\12\1\66\1\67"+
    "\1\70\13\66\1\71\1\66\1\72\70\66\1\73\1\74"+
    "\13\66\1\0\1\66\1\75\67\66\2\0\1\5\221\0"+
    "\1\76\1\77\110\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\34\10\1\0\4\10\21\0\5\10\11\0\1\100"+
    "\1\101\6\0\1\101\36\0\1\101\20\0\1\102\1\0"+
    "\1\103\4\101\11\0\2\12\1\100\1\104\1\105\3\0"+
    "\1\12\12\0\1\100\1\105\22\0\1\12\22\0\5\12"+
    "\14\106\1\107\73\106\11\0\1\110\2\111\1\0\1\111"+
    "\1\0\1\112\1\0\1\110\2\111\10\0\3\111\3\0"+
    "\1\111\3\0\1\111\1\0\1\111\7\0\1\111\22\0"+
    "\5\111\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\6\10\1\113\4\10\1\114\12\10\1\115\5\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\5\10\1\116\2\10\1\117\1\10\1\120"+
    "\1\10\1\121\4\10\1\122\12\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\10\10\1\123\1\124\2\10\1\125\1\10\1\126\2\10"+
    "\1\127\12\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\6\10\1\130\1\131"+
    "\1\10\1\132\1\10\1\133\1\10\1\134\1\135\1\10"+
    "\1\136\5\10\1\137\1\140\4\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\141\1\10\1\142\2\10\1\143\12\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\5\10\1\144\2\10\1\145\1\146\2\10"+
    "\1\147\7\10\1\150\7\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\10\10"+
    "\1\151\1\152\4\10\1\153\2\10\1\154\1\155\11\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\11\10\1\156\10\10\1\157\1\160"+
    "\2\10\1\161\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\10\10\1\162"+
    "\1\163\7\10\1\164\1\165\6\10\1\166\2\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\26\10\1\167\5\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\5\10\1\170\4\10\1\171\1\10\1\172\1\10\1\173"+
    "\5\10\1\174\7\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\175"+
    "\4\10\1\176\12\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\15\10\1\177"+
    "\4\10\1\200\2\10\1\201\1\202\5\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\10\10\1\203\3\10\1\204\4\10\1\205\12\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\10\10\1\206\23\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\5\10\1\207\2\10\1\210\3\10\1\211\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\10\10\1\212\5\10\1\213\15\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\5\10\1\214\2\10\1\215\1\216"+
    "\22\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\10\10\1\217\1\220\2\10"+
    "\1\221\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\222\4\10"+
    "\1\223\12\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\5\10\1\224\23\10"+
    "\1\225\2\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\5\10\1\226\26\10"+
    "\1\0\4\10\21\0\5\10\26\0\1\227\5\0\1\230"+
    "\6\0\1\231\2\0\1\232\32\0\1\233\74\0\1\234"+
    "\107\0\1\235\32\0\1\100\1\101\6\0\1\101\36\0"+
    "\1\101\22\0\5\101\66\0\1\236\107\0\1\237\12\0"+
    "\1\240\70\0\1\241\3\0\1\242\13\0\1\243\5\0"+
    "\1\66\2\0\13\66\1\0\1\66\1\0\67\66\2\0"+
    "\1\70\105\0\2\244\1\0\13\244\1\245\1\246\1\247"+
    "\11\244\1\250\1\251\1\252\12\244\1\253\1\254\37\244"+
    "\2\0\1\74\105\0\2\244\1\0\105\244\1\76\1\255"+
    "\1\256\105\76\5\77\1\257\102\77\11\0\2\101\6\0"+
    "\1\101\36\0\1\101\22\0\5\101\11\0\2\101\6\0"+
    "\1\260\36\0\1\101\22\0\5\101\14\261\1\0\73\261"+
    "\10\0\1\262\2\263\6\0\1\263\36\0\1\263\15\0"+
    "\1\262\4\0\5\263\11\0\2\261\6\0\1\261\36\0"+
    "\1\261\22\0\5\261\11\0\1\264\2\265\1\0\1\265"+
    "\1\0\1\112\1\0\1\264\2\265\10\0\3\265\3\0"+
    "\1\265\3\0\1\265\1\0\1\265\7\0\1\265\22\0"+
    "\5\265\11\0\3\265\1\0\1\265\1\0\1\266\1\0"+
    "\3\265\10\0\3\265\3\0\1\265\3\0\1\265\1\0"+
    "\1\265\7\0\1\265\22\0\5\265\22\0\1\267\1\0"+
    "\1\270\71\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\7\10\1\271\24\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\7\10\1\272"+
    "\24\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\10\10\1\273\1\10\1\274"+
    "\1\275\1\10\1\276\16\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\23\10"+
    "\1\277\10\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\25\10\1\300\6\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\15\10\1\301\16\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\17\10\1\302\14\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\7\10"+
    "\1\303\2\10\1\304\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\11\10"+
    "\1\305\22\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\5\10\1\306\2\10"+
    "\1\307\3\10\1\310\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\11\10"+
    "\1\311\22\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\27\10\1\312\4\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\11\10\1\313\1\314\4\10\1\315"+
    "\14\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\5\10\1\316\26\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\12\10\1\317\21\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\34\10\1\0\2\10\1\320\1\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\321"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\12\10\1\322\21\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\14\10\1\323\17\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\34\10\1\0\1\324\3\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\6\10\1\325\1\326"+
    "\2\10\1\327\2\10\1\330\3\10\1\331\12\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\26\10\1\332\5\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\5\10\1\333\26\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\6\10\1\334"+
    "\25\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\5\10\1\335\10\10\1\336"+
    "\15\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\6\10\1\337\10\10\1\340"+
    "\14\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\7\10\1\341\24\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\11\10\1\342\22\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\5\10\1\343\2\10\1\344\23\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\345\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\5\10\1\346"+
    "\14\10\1\347\11\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\10\10\1\350"+
    "\23\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\11\10\1\351\22\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\17\10\1\352\14\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\12\10\1\353\1\10\1\354\1\355\16\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\15\10\1\356\1\357\15\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\6\10\1\360\17\10\1\361\5\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\362\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\363"+
    "\4\10\1\364\2\10\1\365\11\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\366\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\367"+
    "\4\10\1\370\12\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\5\10\1\371"+
    "\1\372\25\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\30\10\1\373\3\10"+
    "\1\0\1\10\1\374\2\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\10\10\1\375\10\10"+
    "\1\376\12\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\12\10\1\377\7\10"+
    "\1\u0100\3\10\1\u0101\5\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\7\10"+
    "\1\u0102\17\10\1\u0103\4\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\17\10"+
    "\1\u0104\14\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\11\10\1\u0105\22\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\11\10\1\u0106\10\10\1\u0107\11\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u0108\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\5\10\1\u0109\4\10\1\u010a\7\10\1\u010b\11\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\25\10\1\u010c\6\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\24\10\1\u010d\1\u010e\6\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\30\10\1\u010f\3\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\26\10\1\u0110"+
    "\5\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\26\10\1\u0111\1\u0112\4\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\11\10\1\u0113\22\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\17\10\1\u0114\14\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\26\10"+
    "\1\u0115\5\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\13\10\1\u0116\5\10"+
    "\1\u0117\12\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\12\10\1\u0118\13\10"+
    "\1\u0119\1\u011a\2\10\1\u011b\1\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\22\10\1\u011c\11\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\u011d"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\10\10\1\u011e\23\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\14\10\1\u011f\17\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\12\10\1\u0120\21\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\10\10\1\u0121"+
    "\23\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\12\10\1\u0122\21\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\23\10\1\u0123\10\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\22\10\1\u0124\11\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\u0125"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\5\10\1\u0126\26\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\22\10\1\u0127\11\10\1\0\4\10\21\0"+
    "\5\10\47\0\1\u0128\77\0\1\u0129\112\0\1\u012a\102\0"+
    "\1\u012b\54\0\1\256\105\0\4\77\1\256\1\257\102\77"+
    "\11\0\2\101\6\0\1\101\36\0\1\u012c\22\0\5\101"+
    "\11\0\2\261\1\100\1\0\1\105\3\0\1\261\12\0"+
    "\1\100\1\105\22\0\1\261\22\0\5\261\11\0\2\263"+
    "\6\0\1\263\36\0\1\263\22\0\5\263\11\0\2\263"+
    "\1\100\5\0\1\263\12\0\1\100\23\0\1\263\22\0"+
    "\5\263\11\0\1\264\2\265\1\0\1\265\1\0\1\u012d"+
    "\1\0\1\264\2\265\10\0\3\265\3\0\1\265\3\0"+
    "\1\265\1\0\1\265\7\0\1\265\22\0\5\265\11\0"+
    "\3\265\1\0\1\265\1\0\1\u012e\1\0\3\265\10\0"+
    "\3\265\3\0\1\265\3\0\1\265\1\0\1\265\7\0"+
    "\1\265\22\0\5\265\24\0\1\270\71\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\10\10\1\u012f\23\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\11\10\1\u0130\22\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\16\10\1\u0131\15\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\u0132"+
    "\17\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\5\10\1\u0133\26\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\10\10\1\u0134\23\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u0135\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\5\10\1\u0136"+
    "\10\10\1\u0137\15\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\17\10\1\u0138"+
    "\14\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\15\10\1\u0139\16\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\12\10\1\u013a\21\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\20\10\1\u013b\13\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\15\10\1\u013c"+
    "\16\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\17\10\1\u013d\14\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\6\10\1\u013e\25\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\22\10\1\u013f\11\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\21\10\1\u0140"+
    "\12\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\12\10\1\u0141\21\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\17\10\1\u0142\14\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\12\10\1\u0143\21\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\5\10\1\u0144"+
    "\26\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\27\10\1\u0145\4\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\14\10\1\u0146\17\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\11\10\1\u0147\22\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\5\10\1\u0148"+
    "\26\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\14\10\1\u0149\5\10\1\u014a"+
    "\11\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\16\10\1\u014b\15\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\10\10\1\u014c\3\10\1\u014d\1\10\1\u014e"+
    "\15\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\25\10\1\u014f\6\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\17\10\1\u0150\6\10\1\u0151\5\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\17\10\1\u0152\14\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u0153\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\30\10\1\u0154"+
    "\3\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\14\10\1\u0155\17\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\7\10\1\u0156\24\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\12\10\1\u0157\21\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\u0158"+
    "\17\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\14\10\1\u0159\17\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\6\10\1\u015a\25\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\15\10\1\u015b\16\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\22\10\1\u015c"+
    "\11\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\17\10\1\u015d\14\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\21\10\1\u015e\12\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\10\10\1\u015f\23\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\u0160"+
    "\17\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\14\10\1\u0161\17\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\15\10\1\u0162\16\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u0163\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\10\10\1\u0164"+
    "\23\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\6\10\1\u0165\25\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\7\10\1\u0166\24\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\12\10\1\u0167\4\10\1\u0168\6\10\1\u0169\5\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\21\10\1\u016a\12\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\15\10\1\u016b\16\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\u016c"+
    "\17\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\22\10\1\u016d\11\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\21\10\1\u016e\12\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\15\10\1\u016f\16\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\11\10\1\u0170"+
    "\22\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\10\10\1\u0171\7\10\1\u0172"+
    "\13\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\21\10\1\u0173\12\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\26\10\1\u0174\5\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u0175\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\7\10\1\u0176"+
    "\24\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\11\10\1\u0177\22\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\20\10\1\u0178\13\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\13\10\1\u0179\1\u017a\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\25\10"+
    "\1\u017b\6\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u017c\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\17\10\1\u017d\14\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u017e\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\25\10"+
    "\1\u017f\6\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\5\10\1\u0180\26\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\16\10\1\u0181\15\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\5\10\1\u0182\26\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\20\10"+
    "\1\u0183\13\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\17\10\1\u0184\14\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\11\10\1\u0185\22\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u0186\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\34\10"+
    "\1\0\2\10\1\u0187\1\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\30\10\1\u0188\3\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\30\10\1\u0189\3\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\14\10\1\u018a\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\34\10"+
    "\1\0\2\10\1\u018b\1\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\7\10\1\u018c\5\10"+
    "\1\u018d\16\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u018e\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\21\10\1\u018f\12\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\15\10\1\u0190\16\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\34\10"+
    "\1\0\2\10\1\u0191\1\u0192\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u0193\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\22\10\1\u0194\11\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\21\10\1\u0195\12\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\22\10"+
    "\1\u0196\11\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\17\10\1\u0197\14\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\22\10\1\u0198\11\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\21\10\1\u0199\12\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\10\10"+
    "\1\u019a\23\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\16\10\1\u019b\15\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\11\10\1\u019c\3\10\1\u019d\2\10"+
    "\1\u019e\13\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\17\10\1\u019f\14\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u01a0\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\31\10\1\u01a1\2\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\22\10"+
    "\1\u01a2\11\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\22\10\1\u01a3\11\10"+
    "\1\0\4\10\21\0\5\10\46\0\1\u01a4\120\0\1\u01a5"+
    "\107\0\1\u01a6\63\0\1\u01a7\65\0\2\101\6\0\1\101"+
    "\36\0\1\101\22\0\1\101\1\u01a8\3\101\22\0\1\267"+
    "\1\0\1\270\1\u01a9\106\0\1\270\1\u01a9\70\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\11\10\1\u01aa\22\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\14\10\1\u01ab\17\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u01ac\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\11\10"+
    "\1\u01ad\16\10\1\u01ae\3\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\26\10"+
    "\1\u01af\5\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\26\10\1\u01b0\5\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\25\10\1\u01b1\6\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\13\10\1\u01b2\20\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\22\10"+
    "\1\u01b3\11\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\21\10\1\u01b4\12\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\31\10\1\u01b5\2\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\21\10\1\u01b6\12\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\14\10"+
    "\1\u01b7\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u01b8\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\16\10\1\u01b9\15\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\5\10\1\u01ba\26\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\6\10"+
    "\1\u01bb\25\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u01bc\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\10\10\1\u01bd\23\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u01be\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\11\10"+
    "\1\u01bf\22\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\25\10\1\u01c0\6\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\21\10\1\u01c1\12\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\24\10\1\u01c2\7\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\11\10"+
    "\1\u01c3\22\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\11\10\1\u01c4\22\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\5\10\1\u01c5\26\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\11\10\1\u01c6\22\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\5\10"+
    "\1\u01c7\26\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u01c8\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\10\10\1\u01c9\1\u01ca\22\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\30\10\1\u01cb\3\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\22\10\1\u01cc\11\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\15\10\1\u01cd"+
    "\16\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\26\10\1\u01ce\5\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\12\10\1\u01cf\21\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u01d0\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\u01d1"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\11\10\1\u01d2\22\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\11\10\1\u01d3\14\10\1\u01d4\5\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\16\10\1\u01d5\15\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\7\10\1\u01d6\24\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\25\10\1\u01d7"+
    "\6\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\14\10\1\u01d8\17\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\10\10\1\u01d9\11\10\1\u01da\11\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\5\10\1\u01db\3\10\1\u01dc\22\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\12\10\1\u01dd\21\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u01de\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\u01df"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\31\10\1\u01e0\2\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\11\10\1\u01e1\22\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\33\10\1\u01e2\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\17\10\1\u01e3\14\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\26\10\1\u01e4\5\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\14\10\1\u01e5\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\7\10"+
    "\1\u01e6\24\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\21\10\1\u01e7\12\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\10\10\1\u01e8\23\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u01e9\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\14\10"+
    "\1\u01ea\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\15\10\1\u01eb\16\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\14\10\1\u01ec\17\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\11\10\1\u01ed\22\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\14\10"+
    "\1\u01ee\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u01ef\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\5\10\1\u01f0\26\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\21\10\1\u01f1\12\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\14\10"+
    "\1\u01f2\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\10\10\1\u01f3\7\10"+
    "\1\u01f4\13\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u01f5\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u01f6\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\14\10\1\u01f7\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\24\10"+
    "\1\u01f8\7\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\27\10\1\u01f9\4\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u01fa\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\16\10\1\u01fb\15\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\22\10"+
    "\1\u01fc\11\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\27\10\1\u01fd\4\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\22\10\1\u01fe\11\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\10\10\1\u01ff\23\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\16\10"+
    "\1\u0200\15\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\12\10\1\u0201\21\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\27\10\1\u0202\4\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\21\10\1\u0203\12\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\10\10"+
    "\1\u0204\23\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\5\10\1\u0205\26\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u0206\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\14\10\1\u0207\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\33\10"+
    "\1\u0208\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\7\10\1\u0209\24\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\14\10\1\u020a\17\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\21\10\1\u020b\12\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\u020c"+
    "\17\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\12\10\1\u020d\21\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\14\10\1\u020e\17\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u020f\17\10\1\0\4\10\21\0\5\10\35\0"+
    "\1\u0210\131\0\1\u0211\75\0\1\u0212\77\0\1\u0213\63\0"+
    "\2\101\6\0\1\101\36\0\1\u0214\22\0\5\101\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\u0215"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\17\10\1\u0216\14\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\22\10\1\u0217\11\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u0218\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\5\10\1\u0219"+
    "\26\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\15\10\1\u021a\16\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\5\10\1\u021b\26\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u021c\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\30\10\1\u021d"+
    "\3\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\12\10\1\u021e\21\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\25\10\1\u021f\6\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\u0220\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\u0221"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\15\10\1\u0222\16\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\11\10\1\u0223\22\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\u0224\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\17\10\1\u0225"+
    "\14\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\5\10\1\u0226\26\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\12\10\1\u0227\21\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\u0228\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\25\10\1\u0229"+
    "\6\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\20\10\1\u022a\13\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\17\10\1\u022b\14\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\u022c\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\16\10\1\u022d"+
    "\15\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\14\10\1\u022e\17\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\21\10\1\u022f\12\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\21\10\1\u0230\12\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\25\10\1\u0231"+
    "\6\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\5\10\1\u0232\26\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\26\10\1\u0233\5\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\17\10\1\u0234\5\10\1\u0235\6\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\12\10\1\u0236\21\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\u0237"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\14\10\1\u0238\17\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\11\10\1\u0239\22\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\u023a\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\u023b"+
    "\17\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\26\10\1\u023c\5\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\10\10\1\u023d\23\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\15\10\1\u023e\16\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\u023f"+
    "\17\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\17\10\1\u0240\14\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\12\10\1\u0241\21\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\11\10\1\u0242\22\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\u0243"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\13\10\1\u0244\20\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\11\10\1\u0245\22\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\12\10\1\u0246\21\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\11\10\1\u0247"+
    "\22\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\17\10\1\u0248\14\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\12\10\1\u0249\21\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\6\10\1\u024a\25\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\15\10\1\u024b"+
    "\16\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\26\10\1\u024c\5\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\10\10\1\u024d\23\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\u024e\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\21\10\1\u024f"+
    "\12\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\14\10\1\u0250\17\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\17\10\1\u0251\14\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\7\10\1\u0252\24\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\31\10\1\u0253"+
    "\2\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\21\10\1\u0254\12\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\21\10\1\u0255\12\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\u0256\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\22\10\1\u0257"+
    "\11\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\5\10\1\u0258\26\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\34\10\1\0\3\10\1\u0259\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\15\10"+
    "\1\u025a\16\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\12\10\1\u025b\21\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\11\10\1\u025c\22\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\21\10\1\u025d\12\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\7\10"+
    "\1\u025e\24\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\22\10\1\u025f\11\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\11\10\1\u0260\22\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\11\10\1\u0261\22\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\25\10"+
    "\1\u0262\6\10\1\0\4\10\21\0\5\10\44\0\1\u0263"+
    "\110\0\1\u0264\74\0\1\u0265\66\0\2\101\6\0\1\101"+
    "\36\0\1\101\22\0\2\101\1\u0266\2\101\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u0267\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\14\10\1\u0268\17\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\11\10\1\u0269\22\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\12\10"+
    "\1\u026a\21\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u026b\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\7\10\1\u026c\24\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\14\10\1\u026d\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\14\10"+
    "\1\u026e\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\16\10\1\u026f\15\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u0270\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\21\10\1\u0271\12\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\26\10"+
    "\1\u0272\5\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\21\10\1\u0273\12\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u0274\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\25\10\1\u0275\6\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\14\10"+
    "\1\u0276\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\5\10\1\u0277\26\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\30\10\1\u0278\3\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u0279\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\11\10"+
    "\1\u027a\22\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\12\10\1\u027b\21\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\17\10\1\u027c\14\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\10\10\1\u027d\23\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\21\10"+
    "\1\u027e\12\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\5\10\1\u027f\26\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\17\10\1\u0280\14\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\14\10\1\u0281\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\5\10"+
    "\1\u0282\26\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\21\10\1\u0283\12\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\14\10\1\u0284\17\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\6\10\1\u0285\25\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\16\10"+
    "\1\u0286\15\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\22\10\1\u0287\11\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u0288\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u0289\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\11\10"+
    "\1\u028a\22\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\17\10\1\u028b\14\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\16\10\1\u028c\15\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\25\10\1\u028d\6\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\14\10"+
    "\1\u028e\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\12\10\1\u028f\21\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u0290\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\13\10\1\u0291\20\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\12\10"+
    "\1\u0292\21\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\7\10\1\u0293\24\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\17\10\1\u0294\14\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\14\10\1\u0295\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\30\10"+
    "\1\u0296\3\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\24\10\1\u0297\7\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\26\10\1\u0298\5\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u0299\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\20\10"+
    "\1\u029a\13\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\26\10\1\u029b\5\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\33\10\1\u029c\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\5\10\1\u029d\26\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\26\10\1\u029e"+
    "\5\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\22\10\1\u029f\11\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\22\10\1\u02a0\11\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\25\10\1\u02a1\6\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\5\10\1\u02a2"+
    "\26\10\1\0\4\10\21\0\5\10\27\0\1\u02a3\71\0"+
    "\2\101\6\0\1\101\36\0\1\101\22\0\3\101\1\u02a4"+
    "\1\101\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\u02a5\5\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\21\10\1\u02a6"+
    "\12\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\24\10\1\u02a7\7\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\17\10\1\u02a8\14\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\21\10\1\u02a9\12\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\11\10\1\u02aa"+
    "\22\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\12\10\1\u02ab\21\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\22\10\1\u02ac\11\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\11\10\1\u02ad\22\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\u02ae"+
    "\17\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\20\10\1\u02af\13\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\14\10\1\u02b0\17\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u02b1\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\26\10\1\u02b2"+
    "\5\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\22\10\1\u02b3\11\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\10\10\1\u02b4\23\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\10\10\1\u02b5\23\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\12\10\1\u02b6"+
    "\21\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\26\10\1\u02b7\5\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\14\10\1\u02b8\17\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u02b9\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\21\10\1\u02ba"+
    "\12\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\5\10\1\u02bb\26\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\21\10\1\u02bc\12\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\11\10\1\u02bd\22\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\5\10\1\u02be"+
    "\26\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\12\10\1\u02bf\21\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\12\10\1\u02c0\21\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\14\10\1\u02c1\17\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\14\10\1\u02c2"+
    "\17\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\14\10\1\u02c3\17\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\21\10\1\u02c4\12\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\16\10\1\u02c5\15\10\1\0\4\10\21\0\5\10\6\0"+
    "\2\10\1\0\3\10\1\0\1\10\3\0\26\10\1\u02c6"+
    "\5\10\1\0\4\10\21\0\5\10\6\0\2\10\1\0"+
    "\3\10\1\0\1\10\3\0\24\10\1\u02c7\7\10\1\0"+
    "\4\10\21\0\5\10\6\0\2\10\1\0\3\10\1\0"+
    "\1\10\3\0\5\10\1\u02c8\26\10\1\0\4\10\21\0"+
    "\5\10\6\0\2\10\1\0\3\10\1\0\1\10\3\0"+
    "\26\10\1\u02c9\5\10\1\0\4\10\21\0\5\10\26\0"+
    "\1\u02ca\72\0\2\101\6\0\1\101\36\0\1\101\22\0"+
    "\4\101\1\u02cb\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u02cc\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\20\10"+
    "\1\u02cd\13\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\11\10\1\u02ce\22\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\14\10\1\u02cf\17\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\5\10\1\u02d0\26\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\5\10"+
    "\1\u02d1\26\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u02d2\17\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\26\10\1\u02d3\5\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\26\10\1\u02d4\5\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\14\10"+
    "\1\u02d5\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\12\10\1\u02d6\21\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\26\10\1\u02d7\5\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u02d8\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\26\10"+
    "\1\u02d9\5\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\22\10\1\u02da\11\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\14\10\1\u02db\17\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\15\10\1\u02dc\16\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\24\10"+
    "\1\u02dd\7\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\15\10\1\u02de\16\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u02df\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\6\10\1\u02e0\25\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\30\10"+
    "\1\u02e1\3\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\15\10\1\u02e2\16\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\30\10\1\u02e3\3\10\1\0\4\10"+
    "\21\0\5\10\47\0\1\u02e4\51\0\2\101\6\0\1\101"+
    "\36\0\1\u02e5\22\0\5\101\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\14\10\1\u02e6\17\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\10\10\1\u02e7\23\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\26\10"+
    "\1\u02e8\5\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\25\10\1\u02e9\6\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\12\10\1\u02ea\21\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\14\10\1\u02eb\17\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\30\10"+
    "\1\u02ec\3\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\34\10\1\u02ed\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\12\10\1\u02ee\21\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\7\10"+
    "\1\u02ef\24\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\12\10\1\u02f0\21\10"+
    "\1\0\4\10\21\0\5\10\6\0\2\10\1\0\3\10"+
    "\1\0\1\10\3\0\14\10\1\u02f1\17\10\1\0\4\10"+
    "\21\0\5\10\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\27\10\1\u02f2\4\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\12\10"+
    "\1\u02f3\21\10\1\0\4\10\21\0\5\10\26\0\1\u02f4"+
    "\72\0\2\101\6\0\1\101\36\0\1\101\22\0\2\101"+
    "\1\u02f5\2\101\6\0\2\10\1\0\3\10\1\0\1\10"+
    "\3\0\26\10\1\u02f6\5\10\1\0\4\10\21\0\5\10"+
    "\6\0\2\10\1\0\3\10\1\0\1\10\3\0\30\10"+
    "\1\u02f7\3\10\1\0\4\10\21\0\5\10\36\0\1\u02f8"+
    "\57\0\2\10\1\0\3\10\1\0\1\10\3\0\14\10"+
    "\1\u02f9\17\10\1\0\4\10\21\0\5\10\6\0\2\10"+
    "\1\0\3\10\1\0\1\10\3\0\14\10\1\u02fa\17\10"+
    "\1\0\4\10\21\0\5\10\40\0\1\u02fb\121\0\1\u02fc"+
    "\43\0\2\10\1\0\3\10\1\0\1\10\3\0\11\10"+
    "\1\u02fd\22\10\1\0\4\10\21\0\5\10\33\0\1\u02fe"+
    "\116\0\1\u02ff\73\0\1\u0300\113\0\1\u0301\113\0\1\u0302"+
    "\51\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[42480];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;
  private static final char[] EMPTY_BUFFER = new char[0];
  private static final int YYEOF = -1;
  private static java.io.Reader zzReader = null; // Fake

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\3\0\1\1\1\11\1\1\1\11\4\1\1\11\1\0"+
    "\27\1\1\0\2\11\1\1\1\0\7\11\2\1\1\11"+
    "\4\1\2\11\1\0\1\1\1\11\1\0\1\1\1\0"+
    "\1\11\1\1\1\11\1\1\3\0\1\11\3\0\114\1"+
    "\4\0\22\11\1\1\1\11\1\0\2\1\1\0\1\1"+
    "\3\0\2\11\157\1\4\0\1\1\2\0\165\1\4\0"+
    "\1\1\1\11\146\1\2\0\1\11\1\0\117\1\2\11"+
    "\1\0\75\1\1\0\46\1\1\0\31\1\1\0\10\1"+
    "\1\0\6\1\1\0\3\1\1\0\2\1\2\0\1\1"+
    "\3\0\2\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[770];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** this buffer may contains the current text array to be matched when it is cheap to acquire it */
  private char[] zzBufferArray;

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  StringBuilder string = new StringBuilder();
  private int yyline;
  private int yycolumn;



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Scanner(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2286) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart(){
    return zzStartRead;
  }

  public final int getTokenEnd(){
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end,int initialState){
    zzBuffer = buffer;
    zzBufferArray = com.intellij.util.text.CharArrayUtil.fromSequenceWithoutCopying(buffer);
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzPushbackPos = 0;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBufferArray != null ? zzBufferArray[zzStartRead+pos]:zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch ((zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL] : zzBufferL.charAt(zzCurrentPosL))) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = (zzBufferArrayL != null ? zzBufferArrayL[zzMarkedPosL] : zzBufferL.charAt(zzMarkedPosL)) == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = (zzBufferArrayL != null ? zzBufferArrayL[zzMarkedPosL] : zzBufferL.charAt(zzMarkedPosL)) == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL)
            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 106: 
          { return TtcnTypes.TTCN_TIMER;
          }
        case 212: break;
        case 82: 
          { return TtcnTypes.TTCN_FROM;
          }
        case 213: break;
        case 190: 
          { return TtcnTypes.TTCN_EXCEPTION;
          }
        case 214: break;
        case 93: 
          { return TtcnTypes.TTCN_NULL;
          }
        case 215: break;
        case 192: 
          { return TtcnTypes.TTCN_UNIVERSAL;
          }
        case 216: break;
        case 178: 
          { return TtcnTypes.TTCN_FUNCTIOIN;
          }
        case 217: break;
        case 62: 
          { return TtcnTypes.TTCN_OUT;
          }
        case 218: break;
        case 115: 
          { return TtcnTypes.TTCN_UNMAP;
          }
        case 219: break;
        case 29: 
          { return TtcnTypes.TTCN_COMMENT;
          }
        case 220: break;
        case 150: 
          { return TtcnTypes.TTCN_MESSAGE;
          }
        case 221: break;
        case 65: 
          { return TtcnTypes.TTCN_SET;
          }
        case 222: break;
        case 130: 
          { return TtcnTypes.TTCN_PUBLIC;
          }
        case 223: break;
        case 112: 
          { return TtcnTypes.TTCN_CLEAR;
          }
        case 224: break;
        case 25: 
          { string.append( yytext() );
          }
        case 225: break;
        case 43: 
          { return TtcnTypes.TTCN_LARGER_EQ;
          }
        case 226: break;
        case 91: 
          { return TtcnTypes.TTCN_DONE;
          }
        case 227: break;
        case 19: 
          { return TtcnTypes.TTCN_RP;
          }
        case 228: break;
        case 61: 
          { return TtcnTypes.TTCN_MAP;
          }
        case 229: break;
        case 148: 
          { return TtcnTypes.TTCN_AT_FUZZY;
          }
        case 230: break;
        case 77: 
          { return TtcnTypes.TTCN_OR4B;
          }
        case 231: break;
        case 166: 
          { return TtcnTypes.TTCN_ANYTYPE;
          }
        case 232: break;
        case 103: 
          { return TtcnTypes.TTCN_OBJID;
          }
        case 233: break;
        case 104: 
          { return TtcnTypes.TTCN_REPLY;
          }
        case 234: break;
        case 207: 
          { return TtcnTypes.TTCN_OCTETSTRING;
          }
        case 235: break;
        case 96: 
          { return TtcnTypes.TTCN_WITH;
          }
        case 236: break;
        case 143: 
          { return TtcnTypes.TTCN_ACTION;
          }
        case 237: break;
        case 149: 
          { return TtcnTypes.TTCN_INTEGER;
          }
        case 238: break;
        case 18: 
          { return TtcnTypes.TTCN_LP;
          }
        case 239: break;
        case 69: 
          { return TtcnTypes.TTCN_ANY;
          }
        case 240: break;
        case 37: 
          { return TtcnTypes.TTCN_TO;
          }
        case 241: break;
        case 131: 
          { return TtcnTypes.TTCN_REPEAT;
          }
        case 242: break;
        case 156: 
          { return TtcnTypes.TTCN_TIMEOUT;
          }
        case 243: break;
        case 141: 
          { return TtcnTypes.TTCN_SUBSET;
          }
        case 244: break;
        case 146: 
          { return TtcnTypes.TTCN_KILLED;
          }
        case 245: break;
        case 152: 
          { return TtcnTypes.TTCN_PRESENT;
          }
        case 246: break;
        case 72: 
          { return TtcnTypes.TTCN_XOR;
          }
        case 247: break;
        case 111: 
          { return TtcnTypes.TTCN_CATCH;
          }
        case 248: break;
        case 142: 
          { return TtcnTypes.TTCN_SYSTEM;
          }
        case 249: break;
        case 114: 
          { return TtcnTypes.TTCN_UNION;
          }
        case 250: break;
        case 139: 
          { return TtcnTypes.TTCN_SELECT;
          }
        case 251: break;
        case 15: 
          { return TtcnTypes.TTCN_COMMA;
          }
        case 252: break;
        case 122: 
          { return TtcnTypes.TTCN_NOT4B;
          }
        case 253: break;
        case 180: 
          { return TtcnTypes.TTCN_CONTINUE;
          }
        case 254: break;
        case 23: 
          { return TtcnTypes.TTCN_LARGER;
          }
        case 255: break;
        case 128: 
          { return TtcnTypes.TTCN_INCONC;
          }
        case 256: break;
        case 68: 
          { return TtcnTypes.TTCN_ALL;
          }
        case 257: break;
        case 14: 
          { return TtcnTypes.TTCN_RB;
          }
        case 258: break;
        case 163: 
          { return TtcnTypes.TTCN_VALUEOF;
          }
        case 259: break;
        case 129: 
          { return TtcnTypes.TTCN_MODULE;
          }
        case 260: break;
        case 3: 
          { return TtcnTypes.TTCN_MUL;
          }
        case 261: break;
        case 116: 
          { return TtcnTypes.TTCN_START;
          }
        case 262: break;
        case 26: 
          { throw new RuntimeException("Unterminated string at end of line");
          }
        case 263: break;
        case 97: 
          { return TtcnTypes.TTCN_KILL;
          }
        case 264: break;
        case 92: 
          { return TtcnTypes.TTCN_NONE;
          }
        case 265: break;
        case 191: 
          { return TtcnTypes.TTCN_COMPONENT;
          }
        case 266: break;
        case 169: 
          { return TtcnTypes.TTCN_NOBLOCK;
          }
        case 267: break;
        case 136: 
          { return TtcnTypes.TTCN_ENCODE;
          }
        case 268: break;
        case 160: 
          { return TtcnTypes.TTCN_CONTROL;
          }
        case 269: break;
        case 120: 
          { return TtcnTypes.TTCN_LABEL;
          }
        case 270: break;
        case 13: 
          { return TtcnTypes.TTCN_LB;
          }
        case 271: break;
        case 64: 
          { return TtcnTypes.TTCN_FOR;
          }
        case 272: break;
        case 79: 
          { return TtcnTypes.TTCN_RUNS;
          }
        case 273: break;
        case 30: 
          { return TtcnTypes.TTCN_POINT_TO;
          }
        case 274: break;
        case 46: 
          { return TtcnTypes.TTCN_LESS_EQ;
          }
        case 275: break;
        case 38: 
          { return TtcnTypes.TTCN_DO;
          }
        case 276: break;
        case 138: 
          { return TtcnTypes.TTCN_SIZEOF;
          }
        case 277: break;
        case 107: 
          { return TtcnTypes.TTCN_FALSE;
          }
        case 278: break;
        case 196: 
          { return TtcnTypes.TTCN_INTERLEAVE;
          }
        case 279: break;
        case 132: 
          { return TtcnTypes.TTCN_RETURN;
          }
        case 280: break;
        case 11: 
          { return TtcnTypes.TTCN_RM;
          }
        case 281: break;
        case 194: 
          { return TtcnTypes.TTCN_BITSTRING;
          }
        case 282: break;
        case 1: 
          { /* ignore */
          }
        case 283: break;
        case 5: 
          { return TtcnTypes.TTCN_SUB;
          }
        case 284: break;
        case 186: 
          { return TtcnTypes.TTCN_MODULEPAR;
          }
        case 285: break;
        case 203: 
          { return TtcnTypes.TTCN_DEACTIVTE;
          }
        case 286: break;
        case 187: 
          { return TtcnTypes.TTCN_PROCEDURE;
          }
        case 287: break;
        case 155: 
          { return TtcnTypes.TTCN_RUNNING;
          }
        case 288: break;
        case 134: 
          { return TtcnTypes.TTCN_FRIEND;
          }
        case 289: break;
        case 121: 
          { return TtcnTypes.TTCN_XOR4B;
          }
        case 290: break;
        case 135: 
          { return TtcnTypes.TTCN_EXCEPT;
          }
        case 291: break;
        case 94: 
          { return TtcnTypes.TTCN_GOTO;
          }
        case 292: break;
        case 184: 
          { return TtcnTypes.TTCN_GETREPLY;
          }
        case 293: break;
        case 63: 
          { return TtcnTypes.TTCN_REM;
          }
        case 294: break;
        case 10: 
          { return TtcnTypes.TTCN_LM;
          }
        case 295: break;
        case 174: 
          { return TtcnTypes.TTCN_OPTIONAL;
          }
        case 296: break;
        case 52: 
          { string.append( '\r' );
          }
        case 297: break;
        case 87: 
          { return TtcnTypes.TTCN_CHAR;
          }
        case 298: break;
        case 35: 
          { return TtcnTypes.TTCN_OF;
          }
        case 299: break;
        case 74: 
          { return TtcnTypes.TTCN_PORT;
          }
        case 300: break;
        case 9: 
          { return TtcnTypes.TTCN_UNDERSCORE;
          }
        case 301: break;
        case 117: 
          { return TtcnTypes.TTCN_VALUE;
          }
        case 302: break;
        case 154: 
          { return TtcnTypes.TTCN_RECEIVE;
          }
        case 303: break;
        case 34: 
          { return TtcnTypes.TTCN_OR;
          }
        case 304: break;
        case 83: 
          { return TtcnTypes.TTCN_FAIL;
          }
        case 305: break;
        case 193: 
          { return TtcnTypes.TTCN_SIGNATURE;
          }
        case 306: break;
        case 27: 
          { yybegin(YYINITIAL); return TtcnTypes.TTCN_STRING;
          }
        case 307: break;
        case 60: 
          { return TtcnTypes.TTCN_MTC;
          }
        case 308: break;
        case 32: 
          { return TtcnTypes.TTCN_IF;
          }
        case 309: break;
        case 71: 
          { return TtcnTypes.TTCN_LOG;
          }
        case 310: break;
        case 42: 
          { return TtcnTypes.TTCN_NOT_EQ;
          }
        case 311: break;
        case 177: 
          { return TtcnTypes.TTCN_TESTCASE;
          }
        case 312: break;
        case 183: 
          { return TtcnTypes.TTCN_LANGUAGE;
          }
        case 313: break;
        case 199: 
          { return TtcnTypes.TTCN_CHECKSTATE;
          }
        case 314: break;
        case 182: 
          { return TtcnTypes.TTCN_ACTIVTE;
          }
        case 315: break;
        case 153: 
          { return TtcnTypes.TTCN_PATTERN;
          }
        case 316: break;
        case 55: 
          { string.append( '\n' );
          }
        case 317: break;
        case 39: 
          { return TtcnTypes.TTCN_RIGHT_SHIFT_AT;
          }
        case 318: break;
        case 40: 
          { return TtcnTypes.TTCN_ASSIGN;
          }
        case 319: break;
        case 88: 
          { return TtcnTypes.TTCN_STOP;
          }
        case 320: break;
        case 124: 
          { return TtcnTypes.TTCN_GROUP;
          }
        case 321: break;
        case 50: 
          { string.append( '\'' );
          }
        case 322: break;
        case 197: 
          { return TtcnTypes.TTCN_ENUMERATED;
          }
        case 323: break;
        case 165: 
          { return TtcnTypes.TTCN_ADDRESS;
          }
        case 324: break;
        case 144: 
          { return TtcnTypes.TTCN_LENGTH;
          }
        case 325: break;
        case 31: 
          { return TtcnTypes.TTCN_POINT_CONNECT;
          }
        case 326: break;
        case 208: 
          { return TtcnTypes.TTCN_VERDICTTYPE;
          }
        case 327: break;
        case 140: 
          { return TtcnTypes.TTCN_SENDER;
          }
        case 328: break;
        case 109: 
          { return TtcnTypes.TTCN_ERROR;
          }
        case 329: break;
        case 170: 
          { return TtcnTypes.TTCN_BOOL;
          }
        case 330: break;
        case 67: 
          { return TtcnTypes.TTCN_ALT;
          }
        case 331: break;
        case 173: 
          { return TtcnTypes.TTCN_MODIFIES;
          }
        case 332: break;
        case 2: 
          { return TtcnTypes.TTCN_DIV;
          }
        case 333: break;
        case 172: 
          { return TtcnTypes.TTCN_INFINITY;
          }
        case 334: break;
        case 48: 
          { throw new RuntimeException("Illegal escape sequence \""+yytext()+"\"");
          }
        case 335: break;
        case 176: 
          { return TtcnTypes.TTCN_TEMPLATE;
          }
        case 336: break;
        case 51: 
          { string.append( '\\' );
          }
        case 337: break;
        case 84: 
          { return TtcnTypes.TTCN_ELSE;
          }
        case 338: break;
        case 16: 
          { return TtcnTypes.TTCN_CONNECT;
          }
        case 339: break;
        case 22: 
          { return TtcnTypes.TTCN_QUESTION;
          }
        case 340: break;
        case 89: 
          { return TtcnTypes.TTCN_SELF;
          }
        case 341: break;
        case 137: 
          { return TtcnTypes.TTCN_CREATE;
          }
        case 342: break;
        case 211: 
          { return TtcnTypes.TTCN_AT_DETERMINISTIC;
          }
        case 343: break;
        case 41: 
          { return TtcnTypes.TTCN_EQ;
          }
        case 344: break;
        case 201: 
          { return TtcnTypes.TTCN_SETVERDICT;
          }
        case 345: break;
        case 133: 
          { return TtcnTypes.TTCN_RECORD;
          }
        case 346: break;
        case 4: 
          { return TtcnTypes.TTCN_ID;
          }
        case 347: break;
        case 158: 
          { return TtcnTypes.TTCN_EXTENDS;
          }
        case 348: break;
        case 179: 
          { return TtcnTypes.TTCN_EXTERNAL;
          }
        case 349: break;
        case 80: 
          { return TtcnTypes.TTCN_TRUE;
          }
        case 350: break;
        case 209: 
          { return TtcnTypes.TTCN_NOT_A_NUM;
          }
        case 351: break;
        case 6: 
          { return TtcnTypes.TTCN_NUMBER;
          }
        case 352: break;
        case 78: 
          { return TtcnTypes.TTCN_READ;
          }
        case 353: break;
        case 151: 
          { return TtcnTypes.TTCN_PRIVATE;
          }
        case 354: break;
        case 125: 
          { return TtcnTypes.TTCN_WHILE;
          }
        case 355: break;
        case 119: 
          { return TtcnTypes.TTCN_AND4B;
          }
        case 356: break;
        case 123: 
          { return TtcnTypes.TTCN_BREAK;
          }
        case 357: break;
        case 8: 
          { yybegin(STRING); string.setLength(0);
          }
        case 358: break;
        case 162: 
          { return TtcnTypes.TTCN_VARIANT;
          }
        case 359: break;
        case 28: 
          { throw new RuntimeException("Unterminated character literal at end of line");
          }
        case 360: break;
        case 168: 
          { return TtcnTypes.TTCN_DEFAULT;
          }
        case 361: break;
        case 100: 
          { return TtcnTypes.TTCN_MIXED;
          }
        case 362: break;
        case 7: 
          { return TtcnTypes.TTCN_DOT;
          }
        case 363: break;
        case 204: 
          { return TtcnTypes.TTCN_GETVERDICT;
          }
        case 364: break;
        case 81: 
          { return TtcnTypes.TTCN_TYPE;
          }
        case 365: break;
        case 95: 
          { return TtcnTypes.TTCN_HALT;
          }
        case 366: break;
        case 198: 
          { return TtcnTypes.TTCN_COMPLEMENT;
          }
        case 367: break;
        case 102: 
          { return TtcnTypes.TTCN_PARAM;
          }
        case 368: break;
        case 58: 
          { return TtcnTypes.TTCN_HSTRING;
          }
        case 369: break;
        case 188: 
          { return TtcnTypes.TTCN_RECURSIVE;
          }
        case 370: break;
        case 44: 
          { return TtcnTypes.TTCN_RIGHT_SHIFT;
          }
        case 371: break;
        case 118: 
          { return TtcnTypes.TTCN_ALIVE;
          }
        case 372: break;
        case 45: 
          { return TtcnTypes.TTCN_LEFT_SHIFT_AT;
          }
        case 373: break;
        case 90: 
          { return TtcnTypes.TTCN_SEND;
          }
        case 374: break;
        case 101: 
          { return TtcnTypes.TTCN_MATCH;
          }
        case 375: break;
        case 86: 
          { return TtcnTypes.TTCN_CALL;
          }
        case 376: break;
        case 54: 
          { string.append( '\f' );
          }
        case 377: break;
        case 85: 
          { return TtcnTypes.TTCN_CASE;
          }
        case 378: break;
        case 21: 
          { return TtcnTypes.TTCN_EXCL;
          }
        case 379: break;
        case 36: 
          { return TtcnTypes.TTCN_ON;
          }
        case 380: break;
        case 105: 
          { return TtcnTypes.TTCN_RAISE;
          }
        case 381: break;
        case 164: 
          { return TtcnTypes.TTCN_ALTSTEP;
          }
        case 382: break;
        case 161: 
          { return TtcnTypes.TTCN_CONNECTS;
          }
        case 383: break;
        case 181: 
          { return TtcnTypes.TTCN_SUPERSET;
          }
        case 384: break;
        case 206: 
          { return TtcnTypes.TTCN_PERMUTATION;
          }
        case 385: break;
        case 185: 
          { return TtcnTypes.TTCN_IFPRESENT;
          }
        case 386: break;
        case 110: 
          { return TtcnTypes.TTCN_CONST;
          }
        case 387: break;
        case 108: 
          { return TtcnTypes.TTCN_FLOAT;
          }
        case 388: break;
        case 53: 
          { string.append( '\t' );
          }
        case 389: break;
        case 33: 
          { return TtcnTypes.TTCN_IN;
          }
        case 390: break;
        case 195: 
          { return TtcnTypes.TTCN_HEXSTRING;
          }
        case 391: break;
        case 159: 
          { return TtcnTypes.TTCN_EXECUTE;
          }
        case 392: break;
        case 70: 
          { return TtcnTypes.TTCN_AND;
          }
        case 393: break;
        case 147: 
          { return TtcnTypes.TTCN_AT_INDEX;
          }
        case 394: break;
        case 99: 
          { return TtcnTypes.TTCN_INOUT;
          }
        case 395: break;
        case 202: 
          { return TtcnTypes.TTCN_DISCONNECT;
          }
        case 396: break;
        case 73: 
          { return TtcnTypes.TTCN_NOT;
          }
        case 397: break;
        case 17: 
          { return TtcnTypes.TTCN_SEMI;
          }
        case 398: break;
        case 145: 
          { return TtcnTypes.TTCN_NOWAIT;
          }
        case 399: break;
        case 76: 
          { return TtcnTypes.TTCN_OMIT;
          }
        case 400: break;
        case 113: 
          { return TtcnTypes.TTCN_CKECK;
          }
        case 401: break;
        case 127: 
          { return TtcnTypes.TTCN_IMPORT;
          }
        case 402: break;
        case 66: 
          { return TtcnTypes.TTCN_VAR;
          }
        case 403: break;
        case 210: 
          { return TtcnTypes.TTCN_UCHAR;
          }
        case 404: break;
        case 171: 
          { return TtcnTypes.TTCN_GETCALL;
          }
        case 405: break;
        case 98: 
          { return TtcnTypes.TTCN_OSTRING;
          }
        case 406: break;
        case 56: 
          { string.append( '\b' );
          }
        case 407: break;
        case 126: 
          { return TtcnTypes.TTCN_AT_LAZY;
          }
        case 408: break;
        case 12: 
          { return TtcnTypes.TTCN_COLON;
          }
        case 409: break;
        case 157: 
          { return TtcnTypes.TTCN_TRIGGER;
          }
        case 410: break;
        case 47: 
          { return TtcnTypes.TTCN_LEFT_SHIFT;
          }
        case 411: break;
        case 167: 
          { return TtcnTypes.TTCN_DISPLAY;
          }
        case 412: break;
        case 175: 
          { return TtcnTypes.TTCN_OVERRIDE;
          }
        case 413: break;
        case 20: 
          { return TtcnTypes.TTCN_ADD;
          }
        case 414: break;
        case 59: 
          { return TtcnTypes.TTCN_MOD;
          }
        case 415: break;
        case 57: 
          { return TtcnTypes.TTCN_BSTRING;
          }
        case 416: break;
        case 49: 
          { string.append( '\"' );
          }
        case 417: break;
        case 189: 
          { return TtcnTypes.TTCN_EXTENSION;
          }
        case 418: break;
        case 24: 
          { return TtcnTypes.TTCN_LESS;
          }
        case 419: break;
        case 200: 
          { return TtcnTypes.TTCN_CHARSTRING;
          }
        case 420: break;
        case 205: 
          { 
          }
        case 421: break;
        case 75: 
          { return TtcnTypes.TTCN_PASS;
          }
        case 422: break;
        default:
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
            return null;
          }
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
